--liquibase formatted sql

--changeset wiki:page_link_migra-1
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:1 select count(*) from pg_catalog.pg_tables where tablename='page_link' and schemaname = 'thesaurus';
drop index thesaurus.page_link_source_idx;
drop index thesaurus.page_link_target_idx;
--

--changeset wiki:page_link
drop materialized view if exists wiki.page_link_closure;

drop table if exists wiki.page_link;

create table wiki.page_link (
    id                  bigint not null generated by default as identity primary key,
    source_id           bigint not null,
    target_id           bigint not null,
    order_number        smallint,

    sys_status          char(1) default 'A' not null,
    sys_version         integer not null,
    sys_created_at      timestamptz not null,
    sys_created_by      text not null,
    sys_modified_at     timestamptz,
    sys_modified_by     text,

    constraint page_link_source_fk foreign key (source_id) references wiki.page(id),
    constraint page_link_target_fk foreign key (target_id) references wiki.page(id)
);
create index page_link_source_idx on wiki.page_link(source_id);
create index page_link_target_idx on wiki.page_link(target_id);

select core.create_table_metadata('wiki.page_link');
--

--changeset wiki:page_link_migra-2
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:1 select count(*) from pg_catalog.pg_tables where tablename='page_link' and schemaname = 'thesaurus';
insert into wiki.page_link(id, source_id, target_id, order_number)
select id, source_id, target_id, order_number from thesaurus.page_link where sys_status = 'A';
select setval('wiki.page_link_id_seq', (select last_value from thesaurus.page_link_id_seq));
--
