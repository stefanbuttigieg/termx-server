--liquibase formatted sql

--changeset wiki:page_tag_migra-1
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:1 select count(*) from pg_catalog.pg_tables where tablename='page_tag' and schemaname = 'thesaurus';
drop index thesaurus.page_tag_page_idx;
drop index thesaurus.page_tag_tag_idx;
--

--changeset wiki:page_tag
drop table if exists wiki.page_tag;

create table wiki.page_tag (
    id                  bigint not null generated by default as identity primary key,
    page_id             bigint not null,
    tag_id              bigint not null,

    sys_status          char(1) default 'A' not null,
    sys_version         integer not null,
    sys_created_at      timestamptz not null,
    sys_created_by      text not null,
    sys_modified_at     timestamptz,
    sys_modified_by     text,

    constraint page_tag_page_fk foreign key (page_id) references wiki.page(id),
    constraint page_tag_tag_fk foreign key (tag_id) references wiki.tag(id)
);
create index page_tag_page_idx on wiki.page_tag(page_id);
create index page_tag_tag_idx on wiki.page_tag(tag_id);

select core.create_table_metadata('wiki.page_tag');
--

--changeset wiki:page_tag_migra-2
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:1 select count(*) from pg_catalog.pg_tables where tablename='page_tag' and schemaname = 'thesaurus';
insert into wiki.page_tag(id, page_id, tag_id)
select id, page_id, tag_id from thesaurus.page_tag where sys_status = 'A';
select setval('wiki.page_tag_id_seq', (select last_value from thesaurus.page_tag_id_seq));
--
